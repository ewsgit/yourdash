/*
 * Copyright Â©2024 Ewsgit<https://github.com/ewsgit> and YourDash<https://github.com/yourdash> contributors.
 * YourDash is licensed under the MIT License. (https://ewsgit.mit-license.org)
 */

import { existsSync, promises as fs } from "node:fs";
import path from "path";

/*
 *
 * ! NOTICE !
 *
 * THIS FILE HAS BEEN MODIFIED TO ALLOW FOR APPLICATIONS WITHOUT FRONTENDS
 * HOWEVER, THIS HAS NOT BEEN TESTED.
 *
 * */

let fileTemplate = `/**
 * This file is auto-generated by meta/generateApplicationRoutes.js don't edit this file for any reason
 * instead you should run \`yarn run generate-application-routes\`
*/

import loadable from "@loadable/component";
import React from "react";
import { Route, Routes } from "react-router";

/* region loadable */const AppRouter=()=><Routes>{/* region routes */}</Routes>;export default AppRouter
`;

let applicationsPathIds = await fs.readdir(path.resolve(process.cwd(), "../../applications/"));

applicationsPathIds = applicationsPathIds.filter(
  (name) => name !== "gulpfile" && name !== "package.json" && name !== "node_modules" && name !== "README.md",
);

let loadableRegionReplacement = "";
let routeRegionReplacement = "";

applicationsPathIds.forEach((appId, ind) => {
  if (existsSync(path.resolve(process.cwd(), `../../applications/${appId}/web/index.tsx`))) {
    loadableRegionReplacement += `const Application${ind}=loadable(()=>import("@yourdash/applications/${appId}/web/index"));`;
    routeRegionReplacement += `<Route path={"${applicationsPathIds[ind]}/*"} element={<Application${ind}/>}/>`;
  }
});

fileTemplate = fileTemplate.replace("/* region loadable */", loadableRegionReplacement);
fileTemplate = fileTemplate.replace("{/* region routes */}", routeRegionReplacement);

fs.writeFile(path.resolve(process.cwd(), "./src/app/AppRouter.tsx"), fileTemplate).then(() => {
  console.log("Generated AppRouter.tsx Successfully");
});
